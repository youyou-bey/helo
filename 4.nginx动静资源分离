1、首先，什么是动，什么是静
   在Web开发中，通常来说：
   静态资源就是图片,文本等一旦确定就不在变化的资源;（指HTML，JavaScript，CSS，img等文件）
   动态资源就是与数据库进行交互, 获取数据的动作, 而获取到的数据是动态资源;（指那些后台资源）
 

2、其次，动静分离的场景，优势
  动静分离是将网站静态资源（HTML，JavaScript，CSS，img等文件）与后台应用分开部署，
  提高用户访问静态代码的速度，降低对后台应用访问。
   
   动静分离的一种做法是将静态资源部署在nginx上，后台项目部署到应用服务器上，
   根据一定规则静态资源的请求全部请求nginx服务器，达到动静分离的目标。(tomcat服务器)

3、最后，动静分离的工作工程


实战：下方模拟访问网站首页, 通过超链接来访问login登录页面, 以及使用超链接访问静态资源页面实现主页中的动静分离操作, 
根据请求的不同被显示的页面也会有所不同;
location匹配规则:
	- "=": 精准匹配,当匹配成功后不再继续向下匹配;
  - "~/~*": 模糊匹配,当匹配成功后继续向下匹配更加精准的项,若无则返回该匹配;
 upstream webserver {
        server 192.168.123.12;
    }
 upstream tomcat {
        server 192.168.123.13;
    }
server {
    listen      80;
    server_name www.cproxy.com;

    access_log  logs/cloud1908com_access.log    main;
    error_log   logs/cloud1908com_error.log;

    location / {
        root    html/cloud1908com;
        index   index.html index.htm;
    }

  	# 分配静态资源到主目录中;
    location ~ \.(jpeg|png|jpg|gif) {
        root    html/cloud1908com;
    }

    # location后方所匹配的项, 就是去衡量或匹配URL中的字符;
  	# 分配动态资源使用对应脚本执行;
    location ~ \.php$ {
        root           html/cloud1908com;
        fastcgi_pass   127.0.0.1:9000;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        include        fastcgi_params;
    }
}

